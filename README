### 1. Launch Simulation with Environment
```bash
roslaunch stretch_navigation mapping_gazebo.launch gazebo_world:=worlds/willowgarage.world

2. Drive the Robot to Create Map
Use either keyboard or joystick control:
bash
roslaunch stretch_core teleop_twist.launch twist_topic:=/stretch_diff_drive_controller/cmd_vel linear:=1.0 angular:=2.0 teleop_type:=keyboard

3. Save the Created Map
bash
mkdir -p ~/stretch_user/maps
rosrun map_server map_saver -f ${HELLO_FLEET_PATH}/maps/<map_name>

4. Run Navigation with Saved Map
bash
roslaunch stretch_navigation navigation_gazebo.launch gazebo_world:=worlds/willowgarage.world map_yaml:=$(rospack find stretch_navigation)/maps/<map_name>


5. Get Current Pose
bash
rosrun stretch_navigation get_pose.py

    Returns current position (x, y, yaw)

    Use "2D Pose Estimate" in Rviz to set position and rotation

6. Send Navigation Goals (updating send_goals.py using the positions from get_pose.py)
bash
rosrun stretch_navigation send_goals.py

Note: Restart Gazebo before running this, as Rviz and Gazebo won't map properly using "2D Pose Estimate"

bash
rosrun stretch_navigation send_goals_nodes.py

This version includes additional publishers and subscribers for manipulation tasks.
